AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  manchat-app-sync
  Sample SAM Template for manchat-app-sync

Parameters:
  ApiId:
    Type: String
  ConnectionTableDataSourceName:
    Type: String
  RoomTableDataSourceName:
    Type: String

Resources:
  AddRoomMutationResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: Mutation
      FieldName: "addRoom"
      Kind: PIPELINE
      PipelineConfig:
        Functions:
          - !GetAtt AddRoomFunction.FunctionId
          - !GetAtt UpdateConnectionFunction.FunctionId
      RequestMappingTemplate: |
        {}
      ResponseMappingTemplate: |
        #if($ctx.result && $ctx.result.error)
          $util.error($ctx.result.error)
        #end
        $util.toJson(${ctx.stash.room})

  AddRoomFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId: !Ref ApiId
      Name: add_room_function
      DataSourceName: !Ref RoomTableDataSourceName
      FunctionVersion: "2018-05-29"
      RequestMappingTemplate: |
        $util.qr($ctx.stash.put("roomId", $util.autoId()))
        {
          "version": "2017-02-28",
          "operation": "PutItem",
          "key" : {
            "id": $util.dynamodb.toDynamoDBJson($ctx.stash.roomId),
            "createdAt": $util.dynamodb.toDynamoDBJson($util.time.nowEpochSeconds()),
            "name": $util.dynamodb.toDynamoDBJson($ctx.args.input.name),
            "password": $util.dynamodb.toDynamoDBJson($ctx.args.input.password),
            "token": $util.dynamodb.toDynamoDBJson($util.autoId())
          }
        }
      ResponseMappingTemplate: |
        #if($ctx.result && $ctx.result.error)
          $util.error($ctx.result.error)
        #end
        $util.qr($ctx.stash.put("room", $ctx.result))
        {}

  UpdateConnectionFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId: !Ref ApiId
      Name: update_connection_function
      DataSourceName: !Ref ConnectionTableDataSourceName
      FunctionVersion: "2018-05-29"
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "UpdateItem",
          "key": {
            "id" : $util.dynamodb.toDynamoDBJson($ctx.identity.resolverContext.connectionId)
          },
          "update" : {
            "expression" : "SET #roomId = :roomId",
            "expressionNames" : {
              "#roomId" : "roomId"
            },
            "expressionValues" : {
              ":roomId" : $util.dynamodb.toDynamoDBJson($ctx.stash.roomId)
            }
          }
        }
      ResponseMappingTemplate: |
        #if($ctx.result && $ctx.result.error)
          $util.error($ctx.result.error)
        #end
        {}
