AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  manchat-app-sync
  Sample SAM Template for manchat-app-sync

Parameters:
  ApiId:
    Type: String
  ConnectionTableDataSourceName:
    Type: String
  RoomTableDataSourceName:
    Type: String

Resources:
  # Connection.room
  ConnectionRoomQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: Connection
      FieldName: "room"
      DataSourceName: !Ref RoomTableDataSourceName
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "id": $util.dynamodb.toDynamoDBJson($ctx.source.roomId),
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)

  # Connection.user
  ConnectionUserQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: Connection
      FieldName: "user"
      DataSourceName: !Ref RoomTableDataSourceName
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "id": $util.dynamodb.toDynamoDBJson($ctx.source.userId),
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)

  # Room.connections
  RoomConnectionsQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: Room
      FieldName: "connections"
      DataSourceName: !Ref ConnectionTableDataSourceName
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Query",
          "index": "roomId-index",
          "query": {
            "expression" : "#roomId = :roomId",
            "expressionNames" : {
              "#roomId" : "roomId"
            },
            "expressionValues": {
              ":roomId": $util.dynamodb.toDynamoDBJson($ctx.source.id)
            }
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result.items)

  # User.connections
  UserConnectionsQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: User
      FieldName: "connections"
      DataSourceName: !Ref ConnectionTableDataSourceName
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Query",
          "index": "userId-index",
          "query": {
            "expression" : "#userId = :userId",
            "expressionNames" : {
              "#userId" : "userId"
            },
            "expressionValues": {
              ":userId": $util.dynamodb.toDynamoDBJson($ctx.source.id)
            }
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result.items)

  # EntryRoomResult.connections
  EntryRoomResultConnectionsQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: EntryRoomResult
      FieldName: "connections"
      DataSourceName: !Ref ConnectionTableDataSourceName
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Query",
          "index": "roomId-index",
          "query": {
            "expression" : "#roomId = :roomId",
            "expressionNames" : {
              "#roomId" : "roomId"
            },
            "expressionValues": {
              ":roomId": $util.dynamodb.toDynamoDBJson($ctx.source.id)
            }
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result.items)

  # LoginResult.connections
  LoginResultConnectionsQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: LoginResult
      FieldName: "connections"
      DataSourceName: !Ref ConnectionTableDataSourceName
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Query",
          "index": "userId-index",
          "query": {
            "expression" : "#userId = :userId",
            "expressionNames" : {
              "#userId" : "userId"
            },
            "expressionValues": {
              ":userId": $util.dynamodb.toDynamoDBJson($ctx.source.id)
            }
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result.items)

