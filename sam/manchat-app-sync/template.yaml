AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  manchat-app-sync
  Sample SAM Template for manchat-app-sync

Parameters:
  ProjectName:
    Type: String
    Default: manchat-app-sync

Resources:
  # API
  AppSync:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Ref ProjectName
      AuthenticationType: AWS_LAMBDA
      LambdaAuthorizerConfig:
        AuthorizerUri: !GetAtt AppSyncAuthorizer.Arn
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt ServiceRoleStack.Outputs.ServiceRoleArn
        FieldLogLevel: ALL

# TODO AppSyncのCloudWatchのRetentionInDaysを設定する方法がわからない
# TODO LogGroupを設定しようとするとServiceRoleを設定していないせいか、リゾルバーのスタックが失敗するようになる
#  AppSyncLogGroup:
#    Type: AWS::Logs::LogGroup
#    Properties:
#      LogGroupName: !Sub /aws/appsync/apis/${AppSync.ApiId}
#      RetentionInDays: 3

  AppSyncAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: web-socket/lambda/authorizer
      Handler: index.handler
      Tracing: Active
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Lambda Authorizer for AppSync
      FunctionName: appsync-authorizer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub ${ProjectName}-connection-table
        - DynamoDBCrudPolicy:
            TableName: !Sub ${ProjectName}-room-table
        - DynamoDBCrudPolicy:
            TableName: !Sub ${ProjectName}-user-table
      Environment:
        Variables:
          CONNECTION_TABLE_NAME: !Sub ${ProjectName}-connection-table
          ROOM_TABLE_NAME: !Sub ${ProjectName}-room-table
          USER_TABLE_NAME: !Sub ${ProjectName}-user-table
      Layers:
        - !Ref NodeBaseLayer
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        External:
          - '@aws-sdk/client-dynamodb'
          - '@aws-sdk/lib-dynamodb'
          - 'uuidv4'
        Minify: false
        Target: es2022
        OutExtension:
          - .js=.mjs
        EntryPoints:
          - index.ts

  AppsyncPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt AppSyncAuthorizer.Arn
      Action: lambda:InvokeFunction
      Principal: appsync.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt AppSync.Arn

  AppSyncAuthorizerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AppSyncAuthorizer}
      RetentionInDays: 3

  NodeBaseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Base Layer for Node.js
      LayerName: !Sub ${ProjectName}-lambda-layer
      ContentUri: web-socket/lambda/
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - nodejs18.x

  NodeBaseLayerPermission:
    Type: AWS::Lambda::LayerVersionPermission
    Properties:
      Action: lambda:GetLayerVersion
      LayerVersionArn: !Ref NodeBaseLayer
      Principal: !Ref AWS::AccountId

  # Schema
  AppSyncSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt AppSync.ApiId
      DefinitionS3Location: schema.graphql

  # ServiceRole
  ServiceRoleStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/db/service-role/template.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        ConnectionTableArn: !GetAtt TablesStack.Outputs.ConnectionTableArn
        UserTableArn: !GetAtt TablesStack.Outputs.UserTableArn
        RoomTableArn: !GetAtt TablesStack.Outputs.RoomTableArn
        ChatTableArn: !GetAtt TablesStack.Outputs.ChatTableArn

  TablesStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/db/tables/template.yaml
      Parameters:
        ProjectName: !Ref ProjectName

  DataSourcesStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/db/data-sources/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        ProjectName: !Ref ProjectName
        ServiceRoleArn: !GetAtt ServiceRoleStack.Outputs.ServiceRoleArn
        Region: !Ref AWS::Region

  # Relations
  RelationsResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/relations/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        ConnectionTableDataSourceName: ConnectionTableDataSource
        RoomTableDataSourceName: RoomTableDataSource
    DependsOn:
      - AppSyncSchema

  # getConnectionId
  GetConnectionIdResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/query/get-connection-id/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        ConnectionTableDataSourceName: ConnectionTableDataSource
    DependsOn:
      - AppSyncSchema

  # entryRoom
  EntryRoomResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/mutation/entry-room/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        ConnectionTableName: !Sub ${ProjectName}-connection-table
        RoomTableName: !Sub ${ProjectName}-room-table
    DependsOn:
      - AppSyncSchema

  # getRooms
  GetRoomsResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/query/get-rooms/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        ConnectionTableDataSourceName: ConnectionTableDataSource
        RoomTableDataSourceName: RoomTableDataSource
    DependsOn:
      - AppSyncSchema

  # addRoom
  AddRoomResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/mutation/add-room/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        ConnectionTableDataSourceName: ConnectionTableDataSource
        RoomTableDataSourceName: RoomTableDataSource
    DependsOn:
      - AppSyncSchema

  # getUsers
  GetUsersResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: web-socket/query/get-users/template.yaml
      Parameters:
        ApiId: !GetAtt AppSync.ApiId
        UserTableDataSourceName: UserTableDataSource
    DependsOn:
      - AppSyncSchema

Outputs:
  ApiEndpoint:
    Description: AppSync Endpoint
    Value: !GetAtt AppSync.GraphQLUrl
