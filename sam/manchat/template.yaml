AWSTemplateFormatVersion: 2010-09-09
Description: >-
  manchat
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

  # Lambda
  FunctionGetAllSampleStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: rest-api/get-all-sample/template.yaml
      Parameters:
        TableName: !GetAtt DynamoDbSampleStack.Outputs.TableRef

  FunctionGetByIdStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: rest-api/get-by-id/template.yaml
      Parameters:
        TableName: !GetAtt DynamoDbSampleStack.Outputs.TableRef

  FunctionPutItemStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: rest-api/put-item/template.yaml
      Parameters:
        TableName: !GetAtt DynamoDbSampleStack.Outputs.TableRef

  # API Gateway
  ApiRESTStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: rest-api/gateway/template.yaml
      Parameters:
        FunctionGetAllSampleArn: !GetAtt FunctionGetAllSampleStack.Outputs.FunctionArn
        FunctionGetByIdArn: !GetAtt FunctionGetByIdStack.Outputs.FunctionArn
        FunctionPutItemArn: !GetAtt FunctionPutItemStack.Outputs.FunctionArn

  # DynamoDB
  DynamoDbSampleStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: dynamo-db/sample/template.yaml

  # CloudFront
  CloudFrontDistributionStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: cloud-front/template.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        RESTfulApiDomainName: !GetAtt ApiRESTStack.Outputs.DomainName
        StaticBucketDomainName: !GetAtt StaticBucket.RegionalDomainName
        RoomBucketDomainName: !GetAtt RoomBucket.RegionalDomainName

  # S3
  StaticBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub 'manchat-${AWS::AccountId}-static'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      Tags:
        - Key: CloudFormationArn
          Value: !Sub 'manchat-${AWS::AccountId}-static'
  StaticBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${StaticBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontDistributionStack.Outputs.OAI}

  RoomBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub 'manchat-${AWS::AccountId}-room'
      Tags:
        - Key: CloudFormationArn
          Value: !Sub 'manchat-${AWS::AccountId}-room'
  RoomBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RoomBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${RoomBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontDistributionStack.Outputs.OAI}

Outputs:
  CloudFrontAccessUrl:
    Description: Cloud Front URL
    Value: !GetAtt CloudFrontDistributionStack.Outputs.AccessUrl
  RESTfulApiDirectUrl:
    Description: To call the RESTfull API by API Gateway.
    Value: !Sub ${ApiRESTStack.Outputs.ProdDataEndpoint}/api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: true
